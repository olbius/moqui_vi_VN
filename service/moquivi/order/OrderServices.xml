<?xml version="1.0" encoding="UTF-8"?>
<!--
This software is in the public domain under CC0 1.0 Universal plus a
Grant of Patent License.

To the extent possible under law, the author(s) have dedicated all
copyright and related and neighboring rights to this software to the
public domain worldwide. This software is distributed without any
warranty.

You should have received a copy of the CC0 Public Domain Dedication
along with this software (see the LICENSE.md file). If not, see
<http://creativecommons.org/publicdomain/zero/1.0/>.
-->
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-3.xsd">

    <!-- ==================================================== -->
    <!-- ========== Order Change Response Services ========== -->
    <!-- ==================================================== -->

    <service verb="handle" noun="OrderItemChange">
        <description>Called by EECA rule on OrderItem create/update/delete</description>
        <in-parameters>
            <parameter name="orderId" required="true"/>
            <parameter name="orderItemSeqId"/>
            <parameter name="orderPartSeqId"/>
            <parameter name="itemTypeEnumId"/>
            <parameter name="quantity" type="BigDecimal"/>
            <parameter name="unitAmount" type="BigDecimal"/>
            <parameter name="selectedAmount" type="BigDecimal"/>
            <parameter name="isPromo"/>
            <parameter name="originalValue" type="Map"/>
            <parameter name="eecaOperation"/>
        </in-parameters>
        <actions>
            <entity-find-one entity-name="mantle.party.PartyRole" value-field="customerOrgRole">
                <field-map field-name="partyId" from="customerPartyId"/>
                <field-map field-name="roleTypeId" value="OrgInternal"/>
            </entity-find-one>
            <if condition="customerOrgRole == null"><return/></if>

            <if condition="eecaOperation == 'delete'">
                <!--<service-call name="mantle.order.OrderServices.update#OrderPartTotal" in-map="context"/>-->
                <!-- NOTE: OrderServices.handle#OrderMajorChange is called by delete#OrderItem -->
                <return/>
            </if>

            <if condition="!originalValue || quantity != originalValue.quantity || unitAmount != originalValue.unitAmount ||
                        selectedAmount != originalValue.selectedAmount || orderPartSeqId != originalValue.orderPartSeqId"><then>
                <entity-find-one entity-name="mantle.order.OrderHeader" value-field="orderHeader" for-update="true"/>
                <!--<entity-find-one entity-name="mantle.order.OrderPart" value-field="orderPart"/>-->

                <!--<service-call name="mantle.order.OrderServices.update#OrderPartTotal" in-map="context"/>
                <if condition="originalValue &amp;&amp; orderPartSeqId != originalValue.orderPartSeqId">
                    <service-call name="mantle.order.OrderServices.update#OrderPartTotal"
                                  in-map="[orderId:orderId, orderPartSeqId:originalValue.orderPartSeqId]"/>
                </if>-->

                <if condition="isPromo != 'Y' &amp;&amp; !(itemTypeEnumId in ['PITM_SALES_TAX', 'ItemShipping', 'ItemSalesTax', 'ItemVatTax'])">
                    <service-call name="moquivi.order.OrderServices.handle#OrderMajorChange"
                                  in-map="[orderId:orderId, orderPartSeqId:orderPartSeqId]"/>
                    <if condition="originalValue &amp;&amp; orderPartSeqId != originalValue.orderPartSeqId">
                        <service-call name="moquivi.order.OrderServices.handle#OrderMajorChange"
                                      in-map="[orderId:orderId, orderPartSeqId:originalValue.orderPartSeqId]"/>
                    </if>
                </if>
                <!-- NOTE: no need to increment#OrderRevision, will be done when part updated -->
            </then><!--<else>
                &lt;!&ndash; increment order revision if anything else changes on an item &ndash;&gt;
                <service-call name="mantle.order.OrderServices.increment#OrderRevision" in-map="context"/>
            </else>--></if>
        </actions>
    </service>
    <service verb="handle" noun="OrderPartChange">
        <description>Called by EECA rule on OrderPart update</description>
        <in-parameters>
            <parameter name="orderId" required="true"/>
            <parameter name="orderPartSeqId" required="true"/>
            <parameter name="carrierPartyId"/>
            <parameter name="shipmentMethodEnumId"/>
            <parameter name="postalContactMechId"/>
            <parameter name="customerPartyId"/>
            <parameter name="disablePromotions"/>
            <parameter name="disableShippingCalc"/>
            <parameter name="disableTaxCalc"/>
            <parameter name="partTotal" type="BigDecimal"/>
            <parameter name="originalValue" type="Map"/>
        </in-parameters>
        <actions>
            <entity-find-one entity-name="mantle.party.PartyRole" value-field="customerOrgRole">
                <field-map field-name="partyId" from="customerPartyId"/>
                <field-map field-name="roleTypeId" value="OrgInternal"/>
            </entity-find-one>
            <if condition="customerOrgRole == null"><return/></if>

            <!-- generally if partTotal changes only that has changed, so don't consider it any sort of significant change -->
            <if condition="originalValue &amp;&amp; partTotal != originalValue.partTotal"><return/></if>

            <entity-find-one entity-name="mantle.order.OrderHeader" value-field="orderHeader" for-update="true"/>
            <if condition="(!originalValue || postalContactMechId != originalValue.postalContactMechId ||
                            carrierPartyId != originalValue.carrierPartyId || shipmentMethodEnumId != originalValue.shipmentMethodEnumId ||
                            customerPartyId != originalValue.customerPartyId || disablePromotions != originalValue.disablePromotions ||
                            disableShippingCalc != originalValue.disableShippingCalc || disableTaxCalc != originalValue.disableTaxCalc)"><then>
                <service-call name="moquivi.order.OrderServices.handle#OrderMajorChange"
                              in-map="[orderId:orderId, orderPartSeqId:orderPartSeqId]"/>
            </then><!--<else>
                <service-call name="mantle.order.OrderServices.increment#OrderRevision" in-map="context"/>
            </else>--></if>
        </actions>
    </service>
    <service verb="handle" noun="OrderMajorChange">
        <in-parameters>
            <parameter name="orderId" required="true"/>
            <parameter name="orderPartSeqId" required="true"/>
            <parameter name="orderHeader" type="EntityValue"/>
        </in-parameters>
        <actions>
            <entity-find-one entity-name="mantle.party.PartyRole" value-field="customerOrgRole">
                <field-map field-name="partyId" from="customerPartyId"/>
                <field-map field-name="roleTypeId" value="OrgInternal"/>
            </entity-find-one>
            <if condition="customerOrgRole == null"><return/></if>

            <!-- use ec.context.sharedMap for a reentrant semaphore (sort of, not thread safe but all needed to prevent incorrect/infinite recursion) -->
            <set field="sharedFlagKey" from="'OrderMajorChange' + orderId + orderPartSeqId"/>
            <if condition="ec.context.getSharedMap().get(sharedFlagKey)"><return/></if>

            <if condition="orderHeader == null"><entity-find-one entity-name="mantle.order.OrderHeader" value-field="orderHeader" for-update="true"/></if>
            <!--<if condition="orderHeader.productStoreId">-->
                <entity-find-one entity-name="mantle.order.OrderPart" value-field="orderPart" for-update="true"/>
                <set field="noRecalcStatuses" from="['OrderApproved', 'OrderSent', 'OrderCompleted', 'OrderRejected', 'OrderCancelled']"/>
                <if condition="orderHeader.statusId in noRecalcStatuses">
                    <return type="warning" message="Not updating promotions, shipping, or tax for order ${orderId} in status ${orderHeader.status?.description}"/></if>
                <if condition="orderPart.statusId in noRecalcStatuses">
                    <return type="warning" message="Not updating promotions, shipping, or tax for order part ${orderId}:${orderPartSeqId} in status ${orderPart.status?.description}"/></if>

                <!-- make sure no billing done, don't auto update if so -->
                <entity-find-count entity-name="mantle.order.OrderItemBillingDetail" count-field="partBillingCount">
                    <econdition field-name="orderId"/><econdition field-name="orderPartSeqId"/></entity-find-count>
                <if condition="partBillingCount">
                    <return type="warning" message="Not updating promotions, shipping, or tax for order part ${orderId}:${orderPartSeqId} with ${partBillingCount} OrderItemBilling records"/></if>

                <!-- set flag in context root to avoid recursive triggers -->
                <script>ec.context.getSharedMap().put(sharedFlagKey, true)</script>

                <!-- Apply Promotions -->
                <if condition="!'Y'.equals(orderPart.disablePromotions)">
                    <entity-find entity-name="mantle.order.OrderItem" list="promoItemList">
                        <econdition field-name="orderId"/><econdition field-name="orderPartSeqId"/>
                        <econdition field-name="isPromo" value="Y"/>
                    </entity-find>
                    <iterate list="promoItemList" entry="promoItem">
                        <service-call name="mantle.order.OrderServices.delete#OrderItem"
                                      in-map="[orderId:promoItem.orderId, orderItemSeqId:promoItem.orderItemSeqId]"/>
                    </iterate>
                    <service-call name="mantle.product.PromotionServices.apply#OrderPromotions"
                                  in-map="[orderId:orderId, orderPartSeqId:orderPartSeqId, orderHeader:orderHeader]"/>
                </if>

                <!-- Check for promotions with free ground shipping (if shipmentMethodEnumId == ShMthGround) -->
                <set field="doShipCalc" from="true"/>
                <if condition="'ShMthGround'.equals(orderPart.shipmentMethodEnumId)">
                    <!-- get promotions applied -->
                    <entity-find entity-name="mantle.order.OrderItem" list="shipPromoItemList" distinct="true">
                        <econdition field-name="orderId"/><econdition field-name="orderPartSeqId"/>
                        <econdition field-name="isPromo" value="Y"/>
                        <econdition field-name="storePromotionId" operator="is-not-null"/>
                        <select-field field-name="storePromotionId"/>
                    </entity-find>
                    <!-- this may look inefficient, but the best way to get arbitrary set of cached ProductStorePromotion values -->
                    <iterate list="shipPromoItemList" entry="shipPromoItem">
                        <entity-find-one entity-name="mantle.product.store.ProductStorePromotion" value-field="storePromotion" cache="true">
                            <field-map field-name="storePromotionId" from="shipPromoItem.storePromotionId"/></entity-find-one>
                        <if condition="'Y'.equals(storePromotion?.freeGroundShipping)">
                            <set field="doShipCalc" from="false"/>
                            <break/>
                        </if>
                    </iterate>
                </if>

                <!-- Calculate Shipping, after promotions so that order total/etc is adjusted for them -->
                <if condition="!'Y'.equals(orderPart.disableShippingCalc)">
                    <entity-find entity-name="mantle.order.OrderItem" list="shippingItemList">
                        <econdition field-name="orderId"/><econdition field-name="orderPartSeqId"/>
                        <econdition field-name="itemTypeEnumId" value="ItemShipping"/>
                    </entity-find>
                    <iterate list="shippingItemList" entry="shippingItem">
                        <service-call name="mantle.order.OrderServices.delete#OrderItem"
                                      in-map="[orderId:shippingItem.orderId, orderItemSeqId:shippingItem.orderItemSeqId]"/>
                    </iterate>
                    <if condition="doShipCalc">
                        <service-call name="mantle.shipment.CarrierServices.calculate#OrderPartShipping"
                                      in-map="[orderId:orderId, orderPartSeqId:orderPartSeqId, createOrderItem:true]"/>
                    </if>
                </if>

                <!-- Calculate Tax, after Shipping as it might be taxed -->
                <if condition="!'Y'.equals(orderPart.disableTaxCalc)">
                    <entity-find entity-name="mantle.order.OrderItem" list="taxItemList">
                        <econdition field-name="orderId"/><econdition field-name="orderPartSeqId"/>
                        <econdition field-name="itemTypeEnumId" operator="in" value="PITM_SALES_TAX,ItemSalesTax,ItemVatTax"/>
                    </entity-find>
                    <iterate list="taxItemList" entry="taxItem">
                        <service-call name="mantle.order.OrderServices.delete#OrderItem"
                                      in-map="[orderId:taxItem.orderId, orderItemSeqId:taxItem.orderItemSeqId]"/>
                    </iterate>
                    <service-call name="moquivi.commons.TaxServices.calculate#OrderPurchaseTax"
                                  in-map="[orderId:orderId, orderPartSeqId:orderPartSeqId]"/>
                </if>

                <script>ec.context.getSharedMap().remove(sharedFlagKey)</script>

                <!--<service-call name="mantle.order.OrderServices.increment#OrderRevision" in-map="context"/>-->
            <!--</if>-->
        </actions>
    </service>
</services>